package com.iny.side.evaluation.mock;

import com.iny.side.evaluation.domain.entity.Evaluation;
import com.iny.side.evaluation.domain.repository.EvaluationRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeEvaluationRepository implements EvaluationRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0L);
    private final List<Evaluation> data = new ArrayList<>();

    @Override
    public Evaluation save(Evaluation evaluation) {
        if (Objects.isNull(evaluation.getId()) || evaluation.getId() == 0) {
            Evaluation savedEvaluation = Evaluation.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .score(evaluation.getScore())
                    .feedback(evaluation.getFeedback())
                    .isVisible(Boolean.FALSE)
                    .submission(evaluation.getSubmission())
                    .professor(evaluation.getProfessor())
                    .build();

            data.add(savedEvaluation);
            return savedEvaluation;
        }
        data.removeIf(item -> Objects.equals(item.getId(), evaluation.getId()));
        data.add(evaluation);
        return evaluation;
    }

    @Override
    public Optional<Evaluation> findBySubmissionId(Long submissionId) {
        return data.stream()
                .filter(evaluation -> evaluation.getSubmission().getId().equals(submissionId))
                .findFirst();
    }

    public Optional<Evaluation> findById(Long id) {
        return data.stream()
                .filter(evaluation -> evaluation.getId().equals(id))
                .findFirst();
    }
}
